---
kind: pipeline
type: kubernetes
name: OpsData

steps:

  - name: Customize-kube-files
    image: supporttools/kube-builder
    pull: true
    environment:
      APPENV: ${DRONE_COMMIT_BRANCH}
    commands:
      - bash ./deploy.sh

  - name: build-go
    image: golang
    environment:
      CGO_ENABLED: 0
    commands:
      - go get
      - go build -o main

  - name: Docker-Build
    image: plugins/docker
    settings:
      custom_dns: [ 1.1.1.1, 8.8.8.8 ]
      purge: false
      registry: registry.support.tools
      repo: registry.support.tools/opsdata/opsdata
      tags:
        - ${DRONE_BUILD_NUMBER}
        - ${DRONE_COMMIT_BRANCH}
        - latest
      cache_from: "registry.support.tools/opsdata/opsdata:latest"
      username:
        from_secret: registry-username
      password:
        from_secret: registry-password

  - name: Deploy-to-Master
    image: cube8021/drone-kubectl
    settings:
      custom_dns: [ 1.1.1.1, 8.8.8.8 ]
      kubernetes_server:
        from_secret: b1-k3s-prd_server
      kubernetes_token:
        from_secret: b1-k3s-prd_token
    commands:
      - kubectl create ns opsdata-${DRONE_BUILD_NUMBER}
      - kubectl label ns opsdata-${DRONE_BUILD_NUMBER} team=opsdata
      - kubectl label ns opsdata-${DRONE_BUILD_NUMBER} app=opsdata
      - kubectl label ns opsdata-${DRONE_BUILD_NUMBER} ns-purge=true
      - kubectl label ns opsdata-${DRONE_BUILD_NUMBER} class=master
      - kubectl annotate ns opsdata-${DRONE_BUILD_NUMBER} field.cattle.io/projectId=c-jrfsw:p-w678r
      - kubectl apply -n opsdata-${DRONE_BUILD_NUMBER} -f ./deployment-ready/
      - kubectl apply -n opsdata-${DRONE_BUILD_NUMBER} -f ./hpa/master.yaml

  - name: Deploy-to-Dev-b1-k3s-prd
    image: cube8021/drone-kubectl
    settings:
      custom_dns: [ 1.1.1.1, 8.8.8.8 ]
      kubernetes_server:
        from_secret: b1-k3s-prd_server
      kubernetes_token:
        from_secret: b1-k3s-prd_token
    environment:
      PASSWORD:
        from_secret: registry-password
      USERNAME:
        from_secret: registry-username
    commands:
      - kubectl create namespace opsdata-dev --dry-run=client -o yaml | kubectl apply -f -
      - kubectl label --overwrite ns opsdata-dev team=opsdata
      - kubectl label --overwrite ns opsdata-dev app=opsdata
      - kubectl label --overwrite ns opsdata-dev ns-purge=false
      - kubectl label --overwrite ns opsdata-dev class=dev
      - kubectl annotate --overwrite ns opsdata-dev field.cattle.io/projectId=c-jrfsw:p-w678r
      - kubectl apply -n opsdata-dev -f ./deployment-ready/
      - kubectl apply -n opsdata-dev -f ./ingress/dev.yaml
      - kubectl apply -n opsdata-dev -f ./hpa/dev.yaml
      - kubectl wait -n opsdata-dev --for=condition=available --timeout=600s deployment/opsdata

  - name: Deploy-to-Dev-a1-k3s-prd
    image: cube8021/drone-kubectl
    settings:
      custom_dns: [ 1.1.1.1, 8.8.8.8 ]
      kubernetes_server:
        from_secret: a1-k3s-prd_server
      kubernetes_token:
        from_secret: a1-k3s-prd_token
    environment:
      PASSWORD:
        from_secret: registry-password
      USERNAME:
        from_secret: registry-username
    commands:
      - kubectl create namespace opsdata-dev --dry-run=client -o yaml | kubectl apply -f -
      - kubectl label --overwrite ns opsdata-dev team=opsdata
      - kubectl label --overwrite ns opsdata-dev app=opsdata
      - kubectl label --overwrite ns opsdata-dev ns-purge=false
      - kubectl label --overwrite ns opsdata-dev class=dev
      - kubectl annotate --overwrite ns opsdata-dev field.cattle.io/projectId=c-nshm8:p-xwrq7
      - kubectl apply -n opsdata-dev -f ./deployment-ready/
      - kubectl apply -n opsdata-dev -f ./ingress/dev.yaml
      - kubectl apply -n opsdata-dev -f ./hpa/dev.yaml
      - kubectl wait -n opsdata-dev --for=condition=available --timeout=600s deployment/opsdata

  - name: Deploy-to-Staging-b1-k3s-prd
    image: cube8021/drone-kubectl
    settings:
      custom_dns: [ 1.1.1.1, 8.8.8.8 ]
      kubernetes_server:
        from_secret: b1-k3s-prd_server
      kubernetes_token:
        from_secret: b1-k3s-prd_token
    environment:
      PASSWORD:
        from_secret: registry-password
      USERNAME:
        from_secret: registry-username
    commands:
      - kubectl create namespace opsdata-stg --dry-run=client -o yaml | kubectl apply -f -
      - kubectl label --overwrite ns opsdata-stg team=opsdata
      - kubectl label --overwrite ns opsdata-stg app=opsdata
      - kubectl label --overwrite ns opsdata-stg ns-purge=false
      - kubectl label --overwrite ns opsdata-stg class=staging
      - kubectl annotate --overwrite ns opsdata-stg field.cattle.io/projectId=c-jrfsw:p-w678r
      - kubectl apply -n opsdata-stg -f ./deployment-ready/
      - kubectl apply -n opsdata-stg -f ./ingress/staging.yaml
      - kubectl apply -n opsdata-stg -f ./hpa/staging.yaml
      - kubectl wait -n opsdata-stg --for=condition=available --timeout=600s deployment/opsdata
    when:
     event:
     - deployment
     - promote
     target:
     - staging

  - name: Deploy-to-Staging-a1-k3s-prd
    image: cube8021/drone-kubectl
    settings:
      custom_dns: [ 1.1.1.1, 8.8.8.8 ]
      kubernetes_server:
        from_secret: a1-k3s-prd_server
      kubernetes_token:
        from_secret: a1-k3s-prd_token
    environment:
      PASSWORD:
        from_secret: registry-password
      USERNAME:
        from_secret: registry-username
    commands:
      - kubectl create namespace opsdata-stg --dry-run=client -o yaml | kubectl apply -f -
      - kubectl label --overwrite ns opsdata-stg team=opsdata
      - kubectl label --overwrite ns opsdata-stg app=opsdata
      - kubectl label --overwrite ns opsdata-stg ns-purge=false
      - kubectl label --overwrite ns opsdata-stg class=staging
      - kubectl annotate --overwrite ns opsdata-stg field.cattle.io/projectId=c-nshm8:p-xwrq7
      - kubectl apply -n opsdata-stg -f ./deployment-ready/
      - kubectl apply -n opsdata-stg -f ./ingress/staging.yaml
      - kubectl apply -n opsdata-stg -f ./hpa/staging.yaml
      - kubectl wait -n opsdata-stg --for=condition=available --timeout=600s deployment/opsdata
    when:
     event:
     - deployment
     - promote
     target:
     - staging

  - name: Deploy-to-Production-b1-k3s-prd
    image: cube8021/drone-kubectl
    settings:
      custom_dns: [ 1.1.1.1, 8.8.8.8 ]
      kubernetes_server:
        from_secret: b1-k3s-prd_server
      kubernetes_token:
        from_secret: b1-k3s-prd_token
    environment:
      PASSWORD:
        from_secret: registry-password
      USERNAME:
        from_secret: registry-username
    commands:
      - kubectl create namespace opsdata-prd --dry-run=client -o yaml | kubectl apply -f -
      - kubectl label --overwrite ns opsdata-prd team=opsdata
      - kubectl label --overwrite ns opsdata-prd app=opsdata
      - kubectl label --overwrite ns opsdata-prd ns-purge=false
      - kubectl label --overwrite ns opsdata-prd class=production
      - kubectl annotate --overwrite  ns opsdata-prd field.cattle.io/projectId=c-jrfsw:p-w678r
      - kubectl apply -n opsdata-prd -f ./deployment-ready/
      - kubectl apply -n opsdata-prd -f ./ingress/production-root.yaml
      - kubectl apply -n opsdata-prd -f ./ingress/production-www.yaml
      - kubectl apply -n opsdata-prd -f ./hpa/production.yaml
      - kubectl wait -n opsdata-prd --for=condition=available --timeout=600s deployment/opsdata
    when:
     event:
     - deployment
     - promote
     target:
     - production

  - name: Deploy-to-Production-a1-k3s-prd
    image: cube8021/drone-kubectl
    settings:
      custom_dns: [ 1.1.1.1, 8.8.8.8 ]
      kubernetes_server:
        from_secret: a1-k3s-prd_server
      kubernetes_token:
        from_secret: a1-k3s-prd_token
    environment:
      PASSWORD:
        from_secret: registry-password
      USERNAME:
        from_secret: registry-username
    commands:
      - kubectl create namespace opsdata-prd --dry-run=true -o yaml | kubectl apply -f -
      - kubectl label --overwrite ns opsdata-prd team=opsdata
      - kubectl label --overwrite ns opsdata-prd app=opsdata
      - kubectl label --overwrite ns opsdata-prd ns-purge=false
      - kubectl label --overwrite ns opsdata-prd class=production
      - kubectl annotate --overwrite  ns opsdata-prd field.cattle.io/projectId=c-nshm8:p-xwrq7
      - kubectl apply -n opsdata-prd -f ./deployment-ready/
      - kubectl apply -n opsdata-prd -f ./ingress/production-root.yaml
      - kubectl apply -n opsdata-prd -f ./ingress/production-www.yaml
      - kubectl apply -n opsdata-prd -f ./hpa/production.yaml
      - kubectl wait -n opsdata-prd --for=condition=available --timeout=600s deployment/opsdata
    when:
     event:
     - deployment
     - promote
     target:
     - production

image_pull_secrets:
- regcreds
