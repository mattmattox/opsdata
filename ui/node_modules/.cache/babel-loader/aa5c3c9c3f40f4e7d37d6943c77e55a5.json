{"ast":null,"code":"var _jsxFileName = \"/home/mmattox/go/src/github.com/mattmattox/opsdata/ui/opsdata-ui/src/pages/Login.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Redirect } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = props => {\n  _s();\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [redirect, setRedirect] = useState(false);\n  const [failed, setFailed] = useState(false);\n\n  const submit = async e => {\n    e.preventDefault();\n    const response = await fetch('http://localhost:8000/api/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      credentials: 'include',\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n\n    function refreshPage() {\n      window.location.reload(false);\n    }\n\n    const content = await response.json();\n\n    if (response.status === 200) {\n      setRedirect(true);\n      props.setName(content.name);\n      refreshPage();\n    } else {\n      setFailed(true);\n      setRedirect(false);\n    }\n  };\n\n  let message;\n\n  if (failed) {\n    message = /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"alert alert-danger\",\n      children: \"Login failed, please try again\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this);\n  } else {\n    message = /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"h3 mb-3 fw-normal\",\n      children: \"Please sign in\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this);\n  }\n\n  if (redirect) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submit,\n    children: [message, /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      className: \"form-control\",\n      placeholder: \"Email address\",\n      required: true,\n      onChange: e => setEmail(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      className: \"form-control\",\n      placeholder: \"Password\",\n      required: true,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"w-100 btn btn-lg btn-primary\",\n      type: \"submit\",\n      children: \"Sign in\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"hffwMIetY9AElb1Iw+PAgf/lUJg=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/mmattox/go/src/github.com/mattmattox/opsdata/ui/opsdata-ui/src/pages/Login.tsx"],"names":["React","useState","Redirect","Login","props","email","setEmail","password","setPassword","redirect","setRedirect","failed","setFailed","submit","e","preventDefault","response","fetch","method","headers","credentials","body","JSON","stringify","refreshPage","window","location","reload","content","json","status","setName","name","message","target","value"],"mappings":"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","sourcesContent":["import React, {SyntheticEvent, useState} from 'react';\nimport {Redirect} from \"react-router-dom\";\n\nconst Login = (props: { setName: (name: string) => void}) => {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [redirect, setRedirect] = useState(false);\n    const [failed, setFailed] = useState(false);\n\n    const submit = async (e: SyntheticEvent) => {\n        e.preventDefault();\n\n        const response = await fetch('http://localhost:8000/api/login', {\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'},\n            credentials: 'include',\n            body: JSON.stringify({\n                email,\n                password\n            })\n        });\n\n        function refreshPage() {\n          window.location.reload(false);\n        }\n\n        const content = await response.json();\n        \n        if(response.status === 200){\n          setRedirect(true);\n          props.setName(content.name);\n          refreshPage();\n        }else{\n          setFailed(true)\n          setRedirect(false);\n        }\n    }\n\n    let message;\n\n    if (failed) {\n      message = (\n        <h2 className=\"alert alert-danger\">Login failed, please try again</h2>\n      )\n    }\n    else\n    {\n      message = (\n        <h1 className=\"h3 mb-3 fw-normal\">Please sign in</h1>\n      )\n    }\n    if (redirect) {\n        return <Redirect to=\"/\"/>;\n    }\n\n    return (\n        <form onSubmit={submit}>\n            {message}\n            \n            <input type=\"email\" className=\"form-control\" placeholder=\"Email address\" required\n                   onChange={e => setEmail(e.target.value)}\n            />\n\n            <input type=\"password\" className=\"form-control\" placeholder=\"Password\" required\n                   onChange={e => setPassword(e.target.value)}\n            />\n\n            <button className=\"w-100 btn btn-lg btn-primary\" type=\"submit\">Sign in</button>\n        </form>\n    );\n};\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}