{"ast":null,"code":"var _jsxFileName = \"/home/mmattox/go/src/github.com/mattmattox/opsdata/ui/opsdata-ui/src/pages/Login.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Redirect } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = props => {\n  _s();\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [redirect, setRedirect] = useState(false);\n  const [failedlogin, setFailedlogin] = useState(false);\n\n  const submit = async e => {\n    e.preventDefault();\n    const response = await fetch('http://localhost:8000/api/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      credentials: 'include',\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    const content = await response.json();\n\n    if (response.status === 200) {\n      setRedirect(true);\n      props.setName(content.name);\n      setFailedlogin(false);\n    } else {\n      setRedirect(false);\n      props.setName(content.failedlogin);\n      setFailedlogin(true);\n    }\n  };\n\n  if (redirect) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 16\n    }, this);\n  }\n\n  let failedMessage;\n\n  if (props.failedlogin === '') {\n    failedMessage = /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Failed Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submit,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"h3 mb-3 fw-normal\",\n      children: \"Please sign in\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      className: \"form-control\",\n      placeholder: \"Email address\",\n      required: true,\n      onChange: e => setEmail(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      className: \"form-control\",\n      placeholder: \"Password\",\n      required: true,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"w-100 btn btn-lg btn-primary\",\n      type: \"submit\",\n      children: \"Sign in\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"gF8gRB2bYxHWk6skrq2B7QKCL7w=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/mmattox/go/src/github.com/mattmattox/opsdata/ui/opsdata-ui/src/pages/Login.tsx"],"names":["React","useState","Redirect","Login","props","email","setEmail","password","setPassword","redirect","setRedirect","failedlogin","setFailedlogin","submit","e","preventDefault","response","fetch","method","headers","credentials","body","JSON","stringify","content","json","status","setName","name","failedMessage","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAA+BC,QAA/B,QAA8C,OAA9C;AACA,SAAQC,QAAR,QAAuB,kBAAvB;;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAgD;AAAA;;AAC1D,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACU,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAAC,KAAD,CAA9C;;AAEA,QAAMY,MAAM,GAAG,MAAOC,CAAP,IAA6B;AACxCA,IAAAA,CAAC,CAACC,cAAF;AAEA,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAD,EAAoC;AAC5DC,MAAAA,MAAM,EAAE,MADoD;AAE5DC,MAAAA,OAAO,EAAE;AAAC,wBAAgB;AAAjB,OAFmD;AAG5DC,MAAAA,WAAW,EAAE,SAH+C;AAI5DC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBlB,QAAAA,KADiB;AAEjBE,QAAAA;AAFiB,OAAf;AAJsD,KAApC,CAA5B;AAUA,UAAMiB,OAAO,GAAG,MAAMR,QAAQ,CAACS,IAAT,EAAtB;;AAEA,QAAGT,QAAQ,CAACU,MAAT,KAAoB,GAAvB,EAA2B;AACzBhB,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAN,MAAAA,KAAK,CAACuB,OAAN,CAAcH,OAAO,CAACI,IAAtB;AACAhB,MAAAA,cAAc,CAAC,KAAD,CAAd;AACD,KAJD,MAIK;AACHF,MAAAA,WAAW,CAAC,KAAD,CAAX;AACAN,MAAAA,KAAK,CAACuB,OAAN,CAAcH,OAAO,CAACb,WAAtB;AACAC,MAAAA,cAAc,CAAC,IAAD,CAAd;AACD;AACJ,GAxBD;;AA0BA,MAAIH,QAAJ,EAAc;AACV,wBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,MAAIoB,aAAJ;;AACA,MAAIzB,KAAK,CAACO,WAAN,KAAsB,EAA1B,EAA8B;AAC5BkB,IAAAA,aAAa,gBACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAGD;;AAED,sBACI;AAAM,IAAA,QAAQ,EAAEhB,MAAhB;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,SAAS,EAAC,cAA9B;AAA6C,MAAA,WAAW,EAAC,eAAzD;AAAyE,MAAA,QAAQ,MAAjF;AACO,MAAA,QAAQ,EAAEC,CAAC,IAAIR,QAAQ,CAACQ,CAAC,CAACgB,MAAF,CAASC,KAAV;AAD9B;AAAA;AAAA;AAAA;AAAA,YAFJ,eAMI;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,SAAS,EAAC,cAAjC;AAAgD,MAAA,WAAW,EAAC,UAA5D;AAAuE,MAAA,QAAQ,MAA/E;AACO,MAAA,QAAQ,EAAEjB,CAAC,IAAIN,WAAW,CAACM,CAAC,CAACgB,MAAF,CAASC,KAAV;AADjC;AAAA;AAAA;AAAA;AAAA,YANJ,eAUI;AAAQ,MAAA,SAAS,EAAC,8BAAlB;AAAiD,MAAA,IAAI,EAAC,QAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CAzDD;;GAAM5B,K;;KAAAA,K;AA2DN,eAAeA,KAAf","sourcesContent":["import React, {SyntheticEvent, useState} from 'react';\nimport {Redirect} from \"react-router-dom\";\n\nconst Login = (props: { setName: (name: string) => void }) => {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [redirect, setRedirect] = useState(false);\n    const [failedlogin, setFailedlogin] = useState(false);\n\n    const submit = async (e: SyntheticEvent) => {\n        e.preventDefault();\n\n        const response = await fetch('http://localhost:8000/api/login', {\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'},\n            credentials: 'include',\n            body: JSON.stringify({\n                email,\n                password\n            })\n        });\n\n        const content = await response.json();\n\n        if(response.status === 200){\n          setRedirect(true);\n          props.setName(content.name);\n          setFailedlogin(false);\n        }else{\n          setRedirect(false);\n          props.setName(content.failedlogin);\n          setFailedlogin(true);\n        }\n    }\n\n    if (redirect) {\n        return <Redirect to=\"/\"/>;\n    }\n\n    let failedMessage;\n    if (props.failedlogin === '') {\n      failedMessage = (\n          <h2>Failed Login</h2>\n      )\n    }\n\n    return (\n        <form onSubmit={submit}>\n            <h1 className=\"h3 mb-3 fw-normal\">Please sign in</h1>\n            <input type=\"email\" className=\"form-control\" placeholder=\"Email address\" required\n                   onChange={e => setEmail(e.target.value)}\n            />\n\n            <input type=\"password\" className=\"form-control\" placeholder=\"Password\" required\n                   onChange={e => setPassword(e.target.value)}\n            />\n\n            <button className=\"w-100 btn btn-lg btn-primary\" type=\"submit\">Sign in</button>\n        </form>\n    );\n};\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}